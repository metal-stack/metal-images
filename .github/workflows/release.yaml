---
name: Release Pipeline

on:
  release:
    types:
      - published

env:
  GCS_BUCKET: images.metal-pod.io

jobs:
  copy:
    name: Copy image tarballs from latest stable to release
    runs-on: ubuntu-latest

    steps:
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: metal-stack
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go 1.25
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'
          cache: false

      - run: |
          # copy supported images (entire stable folder cannot be copied as a whole because it contains obsolete images as well)
          gsutil -m cp -r gs://$GCS_BUCKET/metal-os/stable/almalinux/9 gs://$GCS_BUCKET/metal-os/${GITHUB_REF##*/}/almalinux/9
          gsutil -m cp -r gs://$GCS_BUCKET/metal-os/stable/debian/12 gs://$GCS_BUCKET/metal-os/${GITHUB_REF##*/}/debian/12
          gsutil -m cp -r gs://$GCS_BUCKET/metal-os/stable/debian-nvidia/12 gs://$GCS_BUCKET/metal-os/${GITHUB_REF##*/}/debian-nvidia/12
          gsutil -m cp -r gs://$GCS_BUCKET/metal-os/stable/firewall/3.0-ubuntu gs://$GCS_BUCKET/metal-os/${GITHUB_REF##*/}/firewall/3.0-ubuntu
          gsutil -m cp -r gs://$GCS_BUCKET/metal-os/stable/ubuntu/24.04 gs://$GCS_BUCKET/metal-os/${GITHUB_REF##*/}/ubuntu/24.04
          gsutil -m cp -r gs://$GCS_BUCKET/metal-os/stable/capms-ubuntu/ gs://$GCS_BUCKET/metal-os/${GITHUB_REF##*/}/capms-ubuntu/

          docker pull ghcr.io/metal-stack/debian:12-stable
          docker tag ghcr.io/metal-stack/debian:12-stable ghcr.io/metal-stack/debian:12
          docker tag ghcr.io/metal-stack/debian:12-stable ghcr.io/metal-stack/debian:latest
          docker push ghcr.io/metal-stack/debian:12

          docker pull ghcr.io/metal-stack/debian-nvidia:12-stable
          docker tag ghcr.io/metal-stack/debian-nvidia:12-stable ghcr.io/metal-stack/debian-nvidia:12
          docker tag ghcr.io/metal-stack/debian-nvidia:12-stable ghcr.io/metal-stack/debian-nvidia:latest
          docker push ghcr.io/metal-stack/debian-nvidia:12

          docker pull ghcr.io/metal-stack/ubuntu:24.04-stable
          docker tag ghcr.io/metal-stack/ubuntu:24.04-stable ghcr.io/metal-stack/ubuntu:24.04
          docker tag ghcr.io/metal-stack/ubuntu:24.04-stable ghcr.io/metal-stack/ubuntu:latest
          docker push ghcr.io/metal-stack/ubuntu:24.04

          # TODO: needs to be solved for capi images in order not to have to enter every release here
          # docker pull ghcr.io/metal-stack/capms-ubuntu:1.32.9-stable
          # docker tag ghcr.io/metal-stack/capms-ubuntu:1.32.9-stable ghcr.io/metal-stack/capms-ubuntu:1.32.9
          # docker tag ghcr.io/metal-stack/capms-ubuntu:1.32.9-stable ghcr.io/metal-stack/capms-ubuntu:latest
          # docker push ghcr.io/metal-stack/capms-ubuntu:1.32.9

          docker pull ghcr.io/metal-stack/almalinux:9-stable
          docker tag ghcr.io/metal-stack/almalinux:9-stable ghcr.io/metal-stack/almalinux:9
          docker tag ghcr.io/metal-stack/almalinux:9-stable ghcr.io/metal-stack/almalinux:latest
          docker push ghcr.io/metal-stack/almalinux:9

          docker pull ghcr.io/metal-stack/firewall:3.0-ubuntu-stable
          docker tag ghcr.io/metal-stack/firewall:3.0-ubuntu-stable ghcr.io/metal-stack/firewall:3.0-ubuntu
          docker tag ghcr.io/metal-stack/firewall:3.0-ubuntu-stable ghcr.io/metal-stack/firewall:latest
          docker push ghcr.io/metal-stack/firewall:3.0-ubuntu

          PREFIX=metal-os/${GITHUB_REF##*/} go run ./cmd/tools/generate-table > downloads.md

      - name: Update release body
        id: update_release
        uses: tubone24/update_release@v1.3.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          body_path: ./downloads.md
          is_append_body: true
