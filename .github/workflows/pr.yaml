name: Pull Request Pipeline

on:
  pull_request:
    branches:
      - master

env:
  GCS_BUCKET: images.metal-pod.io
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  debian-ubuntu:
    name: Build Debian and Ubuntu based OS images

    strategy:
      matrix:
        os:
        - name: debian
          version: 12
        - name: ubuntu
          version: 24.04

    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: metal-stack
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Set up Go 1.25
      uses: actions/setup-go@v5
      with:
        go-version: '1.25.x'
        cache: false

    - name: Lint
      uses: golangci/golangci-lint-action@v8
      with:
        args: --build-tags integration --timeout=3m

    - name: build install
      run: make

    - name: Prepare build environment
      shell: bash
      run: ./prepare.sh ${{ matrix.os.name }}

    - name: use our lz4 which is version 1.10 with multithread support
      shell: bash
      run: |
        chmod +x test/lz4
        sudo cp test/lz4 /usr/bin/lz4

    - name: Build docker image for workers and export tarball
      run: |
        make CIS_VERSION="v4.1-4" OS_NAME="${{ matrix.os.name }}" SEMVER_PATCH="-${{ github.head_ref }}" SEMVER_MAJOR_MINOR="${{ matrix.os.version }}" ${{ matrix.os.name }}

    # TODO enable debian build again, actually droptailer and firewall-controller did not get enabled
    # and then goss tests fail
    - name: Build docker image for firewalls and export tarball
      run: |
        make OS_NAME="firewall" SEMVER_PATCH="-${{ github.head_ref }}" SEMVER_MAJOR_MINOR="${{ matrix.os.version }}" firewall
      if: ${{ matrix.os.name == 'ubuntu' }}

    - name: Prepare build environment
      shell: bash
      run: ./prepare.sh debian-nvidia
      if: ${{ matrix.os.name == 'debian' }}

    - name: Build docker image for debian-nvidia based workers and export tarball
      run: |
        make OS_NAME="debian-nvidia" SEMVER_PATCH="-${{ github.head_ref }}" SEMVER_MAJOR_MINOR="${{ matrix.os.version }}" nvidia
      if: ${{ matrix.os.name == 'debian' }}

    - name: Upload image tarballs to GCS
      run: cd images && gsutil -m -h "Cache-Control:no-store" cp -r . gs://$GCS_BUCKET/metal-os/pull_requests/

  almalinux:
    name: Build Almalinux based OS image
    runs-on: self-hosted
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: metal-stack
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Set up Go 1.25
      uses: actions/setup-go@v5
      with:
        go-version: '1.25.x'
        cache: false

    - name: build install
      run: make
    - name: Prepare build environment
      shell: bash
      run: ./prepare.sh almalinux
    - name: Build docker image for almalinux based workers and export tarball
      run: |
        make OS_NAME="almalinux" SEMVER_PATCH="-${{ github.head_ref }}" SEMVER_MAJOR_MINOR="9" almalinux

    - uses: google-github-actions/setup-gcloud@v0
      with:
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Upload image tarballs to GCS
      run: cd images && gsutil -m -h "Cache-Control:no-store" cp -r . gs://$GCS_BUCKET/metal-os/pull_requests/

